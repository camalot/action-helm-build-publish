name: Helm Build
description: "Build, Package, and Publish Helm Charts to Artifactory"
inputs:
  lint_args:
    description: "Additional arguments to add to `helm lint`. Example: --set foo=bar"
    required: false
    default: ''
  lint_strict:
    description: "Should action use --strict flag for linting (default: true)"
    required: false
    default: 'true'
  template_lint:
    description: "Should action use 'helm template lint' vs 'helm lint' (default: false)"
    required: false
    default: 'false'
  target_ref:
    description: "The branch ref to target for the commit change."
    default: develop
    required: false
  plugin_version:
    description: "The version of the helm artifactory push plugin"
    default: '1.0.1'
    required: false
  ARTIFACTORY_URL:
    description: 'The base url to artifactory.'
    required: true
  ARTIFACTORY_USER:
    description: 'The artifactory login user'
    required: true
  ARTIFACTORY_TOKEN:
    description: 'The artifactory login token'
    required: true
  ARTIFACTORY_REPO_NAME:
    description: 'The name of the helm repo in artifactory'
    required: false
    default: "helm"
  GITHUB_TOKEN:
    required: false
    default: "${{ github.token }}"
    description: 'The github token'
outputs:
  chart_version:
    description: "The updated version of the chart"
    value: "${{ steps.semvers.outputs.patch }}"
  chart_tag:
    description: "The value set for the commit tag"
    value: "${{ steps.semvers.outputs.v_patch }}"
  chart_name:
    description: "The name of the chart that was published"
    value: "${{ steps.chart.outputs.chart_name }}"
runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v2
    with:
      fetch-depth: 0
  - name: 'Get Previous tag'
    id: previoustag
    uses: "WyriHaximus/github-action-get-previous-tag@v1"
    with:
      fallback: 0.1.0 # Optional fallback tag to use when no tag can be found
  - name: 'Get next minor version'
    id: semvers
    uses: "WyriHaximus/github-action-next-semvers@v1"
    with:
      version: ${{ steps.previoustag.outputs.tag }}
  - run: echo "app_version ${{ steps.semvers.outputs.patch }}"
    shell: bash
  - uses: actions/checkout@v2
    with:
      ref: "${{ inputs.target_ref }}"
  - uses: frenck/action-setup-yq@v1.0.0
  - shell: bash
    id: lint_options
    run: |
      LINT_STRICT_FLAG=$([[ '${{ inputs.lint_strict }}' == 'true' ]] && echo -n "--strict" || echo -n "")
      echo ::set-output name=strict::${LINT_STRICT_FLAG}
      TEMPLATE_LINT=$([[ '${{ inputs.template_lint }}' == 'true' ]] && echo -n "template" || echo -n "")
      echo ::set-output name=template::${TEMPLATE_LINT}
  # - name: Update repo and Helm Lint
  #   shell: bash
  #   run: |
  #     helm repo update;
  #     helm ${{ steps.lint_options.outputs.template }} lint ${{ steps.lint_options.outputs.strict}} ${{ inputs.lint_args }} .
  # - name: Helm Lint
  #   uses: WyriHaximus/github-action-helm3@v2
  #   with:
  #     exec: |
  #       helm ${{ steps.lint_options.outputs.template }} lint ${{ steps.lint_options.outputs.strict}} ${{ inputs.lint_args }} .
  - name: Set Chart Version
    id: chart
    shell: bash
    run: |
      echo "version: ${{ steps.semvers.outputs.patch }}"
      yq eval -i '.version = "${{ steps.semvers.outputs.patch }}"' Chart.yaml;
      CHART_NAME="$(yq eval '.name' Chart.yaml)";
      CHART_VERSION="$(yq eval '.version' Chart.yaml)";
      echo ::set-output name=chart_name::${CHART_NAME}
      echo ::set-output name=chart_version::${CHART_VERSION}
  - name: "Publish Helm Chart"
    shell: bash
    run: |
      helm plugin install --version ${{ inputs.plugin_version }} https://github.com/belitre/helm-push-artifactory-plugin --debug;
      helm repo add artifactory "${{ inputs.ARTIFACTORY_URL }}/${{ inputs.ARTIFACTORY_REPO_NAME }}" --username "${{ inputs.ARTIFACTORY_USER}}" --password "${{ inputs.ARTIFACTORY_TOKEN }}"  --debug;
      helm repo update --debug;
      helm dependency update --debug;
      helm ${{ steps.lint_options.outputs.template }} lint ${{ steps.lint_options.outputs.strict}} ${{ inputs.lint_args }} .
      helm package --debug .
      helm push-artifactory ${{ steps.chart.outputs.chart_name }}-${{ steps.chart.outputs.chart_version }}.tgz artifactory --skip-reindex --debug
  - name: "Push Version Change"
    uses: EndBug/add-and-commit@v7
    with:
      add: "Chart.yaml"
      message: ":robot: Version Updated :robot:"
      tag: "${{ steps.semvers.outputs.v_patch }} --force"
      branch: "${{ inputs.target_ref }}"
  - name: "Create Release"
    uses: ncipollo/release-action@v1
    with:
      allowUpdates: true
      artifacts: "${{ steps.chart.outputs.chart_name }}-${{ steps.chart.outputs.chart_version }}.tgz"
      token: ${{ inputs.GITHUB_TOKEN }}
      tag: "${{ steps.semvers.outputs.v_patch }}"
